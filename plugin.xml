<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.0"?><plugin>

   <!-- This is an example for providing an own category 
      <extension
         point="org.knime.workbench.repository.categories">
      <category
            description="Category containing my nodes"
            icon="icons/default.png"
            level-id="myNodes"
            name="My nodes"
            path="/"/>
   </extension>
   -->2
   
<extension point="org.knime.workbench.repository.nodes">
	<node category-path="/inflor/util" factory-class="io.landysh.inflor.main.knime.nodes.fcs.read.ReadFCSTableNodeFactory" id="inflor.readFCSTable"/>
<node category-path="/inflor/util" factory-class="io.landysh.inflor.main.knime.nodes.fcs.read.ReadFCSFrameNodeFactory" id="inflor.readFCSFrame"/>
<node category-path="/inflor/util" factory-class="io.landysh.inflor.main.knime.nodes.downsample.DownsampleNodeFactory" id="inflor.downsample"/>
<node category-path="/inflor/util" factory-class="io.landysh.inflor.main.knime.nodes.portToTableCell.ColumnStoreToTableCellNodeFactory" id="inflor.columnStoreToTableCell"/>
<node category-path="/inflor" factory-class="io.landysh.inflor.main.knime.nodes.fcs.read.ReadFCSSetNodeFactory" id="inflor.readFCSSet"/>
<node after="inflor.transform" category-path="/inflor" factory-class="io.landysh.inflor.main.knime.nodes.createGates.CreateGatesNodeFactory" id="inflor.createGates"/>
<node after="inflor.createGates" category-path="/inflor" factory-class="io.landysh.inflor.main.knime.nodes.summaryStats.SummaryStatisticsNodeFactory" id="inflor.summaryStatistics"/>
<node after="inflor.readFCSSet" category-path="/inflor" factory-class="io.landysh.inflor.main.knime.nodes.compensate.CompensateNodeFactory" id="inflor.compensate"/>
<node after="inflor.compensate" category-path="/inflor" factory-class="io.landysh.inflor.main.knime.nodes.transform.TransformNodeFactory" id="iinflor.transform"/>
<node after="inflor.compensate" category-path="/inflor" factory-class="main.java.inflor.knime.nodes.compensation.extract.fromfcs.ExtractCommpensationNodeFactory" id="inflor.ExtractCommpensation"/>
<node category-path="/" factory-class="io.landysh.inflor.main.knime.nodes.compensation.extractfj9mtx.ExtractCompJONodeFactory" id="io.landysh.inflor.main.knime.nodes.experimental.extractCompJo.ExtractCompJONodeFactory"/>
<node category-path="/" factory-class="io.landysh.inflor.main.knime.nodes.compensation.apply.ApplyCompensationNodeFactory" id="io.landysh.inflor.main.knime.nodes.experimental.ApplyCompensationNodeFactory"/>
<node category-path="/" factory-class="main.java.inflor.knime.nodes.utility.extractsubset.ExtractTrainingSetNodeFactory" id="src.main.java.knime.nodes.utility.extractsubset.ExtractTrainingSetNodeFactory"/>
<node
      deprecated="false"
      factory-class="main.java.inflor.knime.nodes.sne.bhtsne.TSNENodeFactory">
</node>
</extension>

<extension point="org.knime.workbench.repository.categories">
		<category icon="META-INF/icons/inflor_knime.png" level-id="inflor" locked="true" name="Inflor" path="/"/>
  <category after="inflor.summaryStatistics" icon="META-INF/icons/inflor_knime.png" level-id="util" locked="true" name="Utilities" path="/inflor">
  </category>
</extension>

<extension point="org.knime.core.PortType">
      <portType color="#9B30FF" hidden="false" name="Inflor.FCSFramePort" objectClass="main.java.inflor.knime.ports.fcs.FCSFramePortObject" objectSerializer="main.java.inflor.knime.ports.fcs.FCSFramePortObject$Serializer" specClass="main.java.inflor.knime.ports.fcs.FCSFramePortSpec" specSerializer="main.java.inflor.knime.ports.fcs.FCSFramePortSpec$Serializer"/>
      <portType color="#F300FF" hidden="false" name="Inflor.compMatrix" objectClass="io.landysh.inflor.main.knime.ports.compensation.CompMatrixPortObject" objectSerializer="io.landysh.inflor.main.knime.ports.compensation.CompMatrixPortObject$Serializer" specClass="io.landysh.inflor.main.knime.ports.compensation.CompMatrixPortSpec" specSerializer="io.landysh.inflor.main.knime.ports.compensation.CompMatrixPortSpec$Serializer">
      </portType>
</extension>
<extension point="org.knime.core.DataType">
   <DataType cellClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameFileStoreDataCell" factoryClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameCellFactory">
      <serializer cellClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameFileStoreDataCell" serializerClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameFileStoreDataCell$Serializer">
      </serializer>
   </DataType>
</extension>
<extension point="org.knime.core.DataValueRenderer">
   <dataValue valueClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameDataValue">
      <renderer rendererFactoryClass="io.landysh.inflor.main.knime.data.type.cell.fcs.FCSFrameCellRenererFactory" suggestAsDefault="true">
      </renderer>
   </dataValue>
</extension>
   
</plugin>
